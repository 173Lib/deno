# THIS FILE IS AUTOGENERATED USING ./tools/get_workflow.yml
{
  "name": "ci",
  "on": [
    "pull_request"
  ],
  "jobs": {
    "build_linux_release": {
      "name": "build / linux / release",
      "runs-on": "${{ github.repository == 'denoland/deno' && 'ubuntu-latest-xl' || 'ubuntu-18.04' }}",
      "timeout-minutes": 60,
      "env": {
        "CARGO_INCREMENTAL": "0",
        "RUST_BACKTRACE": "full",
        "CARGO_TERM_COLOR": "always"
      },
      "steps": [
        {
          "name": "Configure git",
          "run": "git config --global core.symlinks true"
        },
        {
          "name": "Checkout repository",
          "uses": "actions/checkout@v2",
          "with": {
            "fetch-depth": 5,
            "submodules": true
          }
        },
        {
          "name": "Package sourcecode",
          "run": "mkdir -p target/release\ntar --exclude=.cargo_home --exclude=\".git*\" --exclude=target --exclude=third_party/prebuilt -czf target/release/deno_src.tar.gz -C .. deno"
        },
        {
          "name": "Configure canary",
          "if": "!startsWith(github.ref, 'refs/tags/')",
          "shell": "bash",
          "run": "echo 'DENO_CANARY=true' >> $GITHUB_ENV"
        },
        {
          "name": "Build cache",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.cargo/registry\n~/.cargo/git\n.cargo_home\ntarget/*/.*\ntarget/*/build\ntarget/*/deps",
            "key": "linux-release-${{ hashFiles('Cargo.lock') }}",
            "restore-keys": "linux-release-"
          }
        },
        {
          "name": "Setup Rust",
          "uses": "actions-rs/toolchain@v1",
          "with": {
            "default": true,
            "override": true,
            "toolchain": "1.50.0"
          }
        },
        {
          "name": "Build release",
          "uses": "actions-rs/cargo@v1",
          "with": {
            "use-cross": false,
            "command": "build",
            "args": "--locked --all-targets --release"
          }
        },
        {
          "name": "Upload build artifact",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "build-linux-release",
            "path": "target/release/deno\ntarget/release/denort"
          }
        },
        {
          "name": "Package",
          "working-directory": "target/release",
          "run": "zip -r deno-x86_64-unknown-linux-gnu.zip deno\nzip -r denort-x86_64-unknown-linux-gnu.zip denort\n./deno types > lib.deno.d.ts"
        },
        {
          "name": "Upload package artifacts",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "package",
            "path": "target/release/deno-x86_64-unknown-linux-gnu.zip\ntarget/release/deno-x86_64-pc-windows-msvc.zip\ntarget/release/deno-x86_64-apple-darwin.zip\ntarget/release/denort-x86_64-unknown-linux-gnu.zip\ntarget/release/denort-x86_64-pc-windows-msvc.zip\ntarget/release/denort-x86_64-apple-darwin.zip\ntarget/release/deno_src.tar.gz\ntarget/release/lib.deno.d.ts",
            "retention-days": 7
          }
        }
      ]
    },
    "build_linux_debug": {
      "name": "build / linux / debug",
      "runs-on": "${{ github.repository == 'denoland/deno' && 'ubuntu-latest-xl' || 'ubuntu-18.04' }}",
      "timeout-minutes": 60,
      "env": {
        "CARGO_INCREMENTAL": "0",
        "RUST_BACKTRACE": "full",
        "CARGO_TERM_COLOR": "always"
      },
      "steps": [
        {
          "name": "Configure git",
          "run": "git config --global core.symlinks true"
        },
        {
          "name": "Checkout repository",
          "uses": "actions/checkout@v2",
          "with": {
            "fetch-depth": 5,
            "submodules": true
          }
        },
        {
          "name": "Configure canary",
          "if": "!startsWith(github.ref, 'refs/tags/')",
          "shell": "bash",
          "run": "echo 'DENO_CANARY=true' >> $GITHUB_ENV"
        },
        {
          "name": "Build cache",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.cargo/registry\n~/.cargo/git\n.cargo_home\ntarget/*/.*\ntarget/*/build\ntarget/*/deps",
            "key": "linux-debug-${{ hashFiles('Cargo.lock') }}",
            "restore-keys": "linux-debug-"
          }
        },
        {
          "name": "Setup Rust",
          "uses": "actions-rs/toolchain@v1",
          "with": {
            "default": true,
            "override": true,
            "toolchain": "1.50.0"
          }
        },
        {
          "name": "Build debug",
          "uses": "actions-rs/cargo@v1",
          "with": {
            "use-cross": false,
            "command": "build",
            "args": "--locked --all-targets "
          }
        },
        {
          "name": "Upload build artifact",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "build-linux-debug",
            "path": "target/debug/deno\ntarget/debug/denort"
          }
        }
      ]
    },
    "build_macos_release": {
      "name": "build / macos / release",
      "runs-on": "macos-10.15",
      "timeout-minutes": 60,
      "env": {
        "CARGO_INCREMENTAL": "0",
        "RUST_BACKTRACE": "full",
        "CARGO_TERM_COLOR": "always"
      },
      "steps": [
        {
          "name": "Configure git",
          "run": "git config --global core.symlinks true"
        },
        {
          "name": "Checkout repository",
          "uses": "actions/checkout@v2",
          "with": {
            "fetch-depth": 5,
            "submodules": true
          }
        },
        {
          "name": "Configure canary",
          "if": "!startsWith(github.ref, 'refs/tags/')",
          "shell": "bash",
          "run": "echo 'DENO_CANARY=true' >> $GITHUB_ENV"
        },
        {
          "name": "Build cache",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.cargo/registry\n~/.cargo/git\n.cargo_home\ntarget/*/.*\ntarget/*/build\ntarget/*/deps",
            "key": "macos-release-${{ hashFiles('Cargo.lock') }}",
            "restore-keys": "macos-release-"
          }
        },
        {
          "name": "Setup Rust",
          "uses": "actions-rs/toolchain@v1",
          "with": {
            "default": true,
            "override": true,
            "toolchain": "1.50.0"
          }
        },
        {
          "name": "Build release",
          "uses": "actions-rs/cargo@v1",
          "with": {
            "use-cross": false,
            "command": "build",
            "args": "--locked --all-targets --release"
          }
        },
        {
          "name": "Upload build artifact",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "build-macos-release",
            "path": "target/release/deno\ntarget/release/denort"
          }
        },
        {
          "name": "Package",
          "working-directory": "target/release",
          "run": "zip -r deno-x86_64-apple-darwin.zip deno\nzip -r denort-x86_64-apple-darwin.zip denort"
        },
        {
          "name": "Upload package artifacts",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "package",
            "path": "target/release/deno-x86_64-unknown-linux-gnu.zip\ntarget/release/deno-x86_64-pc-windows-msvc.zip\ntarget/release/deno-x86_64-apple-darwin.zip\ntarget/release/denort-x86_64-unknown-linux-gnu.zip\ntarget/release/denort-x86_64-pc-windows-msvc.zip\ntarget/release/denort-x86_64-apple-darwin.zip\ntarget/release/deno_src.tar.gz\ntarget/release/lib.deno.d.ts",
            "retention-days": 7
          }
        }
      ]
    },
    "build_windows_release": {
      "name": "build / windows / release",
      "runs-on": "windows-2019",
      "timeout-minutes": 60,
      "env": {
        "CARGO_INCREMENTAL": "0",
        "RUST_BACKTRACE": "full",
        "CARGO_TERM_COLOR": "always"
      },
      "steps": [
        {
          "name": "Configure git",
          "run": "git config --global core.symlinks true"
        },
        {
          "name": "Checkout repository",
          "uses": "actions/checkout@v2",
          "with": {
            "fetch-depth": 5,
            "submodules": true
          }
        },
        {
          "name": "Configure canary",
          "if": "!startsWith(github.ref, 'refs/tags/')",
          "shell": "bash",
          "run": "echo 'DENO_CANARY=true' >> $GITHUB_ENV"
        },
        {
          "name": "Build cache",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.cargo/registry\n~/.cargo/git\n.cargo_home\ntarget/*/.*\ntarget/*/build\ntarget/*/deps",
            "key": "windows-release-${{ hashFiles('Cargo.lock') }}",
            "restore-keys": "windows-release-"
          }
        },
        {
          "name": "Setup Rust",
          "uses": "actions-rs/toolchain@v1",
          "with": {
            "default": true,
            "override": true,
            "toolchain": "1.50.0"
          }
        },
        {
          "name": "Build release",
          "uses": "actions-rs/cargo@v1",
          "with": {
            "use-cross": false,
            "command": "build",
            "args": "--locked --all-targets --release"
          }
        },
        {
          "name": "Upload build artifact",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "build-windows-release",
            "path": "target/release/deno.exe\ntarget/release/denort.exe"
          }
        },
        {
          "name": "Package",
          "working-directory": "target/release",
          "run": "Compress-Archive -CompressionLevel Optimal -Force -Path deno.exe -DestinationPath deno-x86_64-pc-windows-msvc.zip\nCompress-Archive -CompressionLevel Optimal -Force -Path denort.exe -DestinationPath denort-x86_64-pc-windows-msvc.zip"
        },
        {
          "name": "Upload package artifacts",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "package",
            "path": "target/release/deno-x86_64-unknown-linux-gnu.zip\ntarget/release/deno-x86_64-pc-windows-msvc.zip\ntarget/release/deno-x86_64-apple-darwin.zip\ntarget/release/denort-x86_64-unknown-linux-gnu.zip\ntarget/release/denort-x86_64-pc-windows-msvc.zip\ntarget/release/denort-x86_64-apple-darwin.zip\ntarget/release/deno_src.tar.gz\ntarget/release/lib.deno.d.ts",
            "retention-days": 7
          }
        }
      ]
    }
  }
}